plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.moowork.node' version '1.3.1' // npm plugin
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.motudy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    gradlePluginPortal() // https://plugins.gradle.org/m2/
}

dependencies {
    // View Template Engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Persistence
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.24'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JPA-querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'


    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor('org.projectlombok:lombok')

    // Dev
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Test Implementation
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.tngtech.archunit:archunit-junit5:0.23.1'

    // Test Container
    runtimeOnly 'com.h2database:h2'
    testImplementation "org.testcontainers:testcontainers:1.15.3"
    testImplementation 'org.testcontainers:junit-jupiter:1.15.3'
    testImplementation 'org.testcontainers:mysql:1.15.3'

    // npm
    implementation 'com.moowork.gradle:gradle-node-plugin:1.3.1'

    // Util - Mapper
    implementation 'org.modelmapper:modelmapper:3.1.1'

}

test {
    useJUnitPlatform()
}

/** querydsl */
def querydslDir = "$buildDir/generated/querydsl" // querydsl에서 사용할 경로 설정

querydsl { // JPA 사용 여부와 사용할 경로 설정
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets { // build 시 사용할 sourceSet 추가
    main.java.srcDir querydslDir
}

compileQuerydsl { // querydsl 컴파일 시 사용할 옵션 설정
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

/** npm */
def generated = 'generated'

sourceSets {
    main {
        java {
            srcDirs += generated
            //exclude '**/uncompilable/**'
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

apply plugin: 'com.moowork.node'
// npm using on gradle project
tasks.register('npm-Install') {
    group = 'application'
    description = 'Installs dependencies from package.json'
    tasks.appNpmInstall.exec();
}

task appNpmInstall(type: NpmTask) {
    // src/main/resources/static
    description = 'Installs dependencies from package.json'
    workingDir = file('/src/main/resources/static')
    args = ['install']
}

clean.doLast {
    file(generated).deleteDir()
}